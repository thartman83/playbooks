- name: Copy the base image to the pool
  copy:
    src: "{{ vm_working_dir }}/{{ vm_img_name }}"
    dest: "{{ vm_pool_dir }}/{{ item }}.{{ vm_img_fmt }}"
    remote_src: true
  loop: "{{ vm_cluster_vms }}"

- name: Configure the images
  command: |
    virt-customize -a {{ vm_pool_dir }}/{{ vm }}.{{ vm_img_fmt }} \
      --hostname {{ vm }} \
      --mkdir '/usr/local/share/ca-certificates/domain'
      --copy-in '{{ domain_ca_cert }}:/usr/local/share/ca-certificates/domain/'
      --ssh-inject 'root:string:{{ lookup('file', '{{ ssh_pub_key }}') }}' \
      --run-command 'ssh-keygen -A;systemctl start sshd;update-ca-certificates' \
      --install python \
      --uninstall cloud-init
  loop: "{{ vm_cluster_vms }}"
  loop_control:
    loop_var: vm

- name: Spin up the virtual machines
  community.libvirt.virt:
    command: define
    xml: "{{ lookup('template', 'templates/vm-template.xml') }}"
  loop: "{{ vm_cluster_vms }}"
  loop_control:
    index_var: idx

- name: Start the vm
  community.libvirt.virt:
    state: running
    name: "{{ item }}"
  loop: "{{ vm_cluster_vms }}"
  loop_control:
    index_var: idx

- name: Wait for vms to become available
  ansible.builtin.pause:
    seconds: 10

- name: Allow forward traffic from 172.17.2.0/24 to 172.17.1.0/24 via kvmbr0 and eno1
  ansible.builtin.iptables:
    chain: FORWARD
    in_interface: kvmbr0
    out_interface: eno1
    source: 172.17.2.0/24
    destination: 172.17.1.0/24
    action: insert
    rule_num: 1
    jump: ACCEPT
    state: present

- name: Allow forward traffic from 172.17.1.0/24 to 172.17.2.0/24 via eno1 and kvmbr0
  ansible.builtin.iptables:
    chain: FORWARD
    in_interface: eno1
    out_interface: kvmbr0
    source: 172.17.1.0/24
    destination: 172.17.2.0/24
    action: insert
    rule_num: 1
    jump: ACCEPT
    state: present

- name: Add iptables nat masquerade rule
  ansible.builtin.iptables:
    table: nat
    chain: POSTROUTING
    source: "{{ vm_cluster_bridge_net }}"
    out_interface: "{{ vmhost_bridge_iface }}"
    jump: MASQUERADE
    state: present
